// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_json = require("bs-platform/lib/js/js_json.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Messages_bs = require("./messages_bs.js");

function convert(desired, t) {
  if (desired === t.u) {
    return t;
  }
  var v = t.v;
  var v$1 = desired ? v * 9 / 5 + 32 : (v - 32) * 5 / 9;
  return {
          u: desired,
          v: v$1
        };
}

function request_of_json_string(json_str) {
  var o = Js_json.decodeObject(JSON.parse(json_str));
  if (o !== undefined) {
    return Messages_bs.decode_request(Caml_option.valFromOption(o));
  }
  
}

function json_str_of_response(response) {
  return JSON.stringify(Messages_bs.encode_response(response));
}

function convert_json(request_str) {
  var match = request_of_json_string(request_str);
  if (match === undefined) {
    return JSON.stringify(Messages_bs.encode_response({
                    TAG: /* Error */0,
                    _0: "error decoding request"
                  }));
  }
  var t = match.temperature;
  if (t === undefined) {
    return JSON.stringify(Messages_bs.encode_response({
                    TAG: /* Error */0,
                    _0: "error decoding request"
                  }));
  }
  var response = {
    TAG: /* Temperature */1,
    _0: convert(match.desired, t)
  };
  return JSON.stringify(Messages_bs.encode_response(response));
}

exports.convert = convert;
exports.request_of_json_string = request_of_json_string;
exports.json_str_of_response = json_str_of_response;
exports.convert_json = convert_json;
/* Messages_bs Not a pure module */
